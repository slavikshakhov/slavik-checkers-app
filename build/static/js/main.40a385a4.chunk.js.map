{"version":3,"sources":["helpers.js","components/Piece.js","components/Col.js","components/Row.js","components/Game.js","components/Results.js","components/AskUserInfo.js","constants.js","components/UserInfo.js","App.js","serviceWorker.js","reducers.js","board.js","store.js","index.js"],"names":["canAnyPieceJump","state","board","activePlayer","row","length","col","player","isKing","canThisPieceJump","console","log","r","c","pieceJumps","oppositeFieldSingle","oppositeFieldDouble","okRows","iteration","colFactor","square","concat","rowTarget","colTarget","jumpLeft","push","jumpRight","undefined","canThisPieceMove","allPieceMoves","nextRow","maxRowMove","moveLeftOrRight","leftMove","rightMove","canAnyKingJump","canThisKingJump","allKingJumps","rowFactor","rowLimit","colLimit","canThisKingMove","colRight","colLeft","rowBottom","rowTop","Piece","_ref","classes","react_default","a","createElement","className","Col","selectedBorder","darkSquare","rowNum","colNum","squareClick","start","selRow","selCol","onClick","Piece_Piece","Row","map","i","src_components_Col","key","Game","rows","components_Row","Results","cols","columnHead","columnCell","playerStyle","boardColumns","_this$props$state","this","props","read","players","count","from","relocatedFrom","to","relocatedTo","captured","capturedAt","relocType","Component","connect","AskUserInfo","player1","player2","warning","onInputChange","e","_this$setState","target","name","value","_this","setState","Object","defineProperty","onPlayersInfoSumbit","preventDefault","_this$state","setPlayers","input","label","visibility","onSubmit","type","onChange","dispatch","stopAnimation","payload","UserInfo","children","App","clickedRow","clickedCol","clickedSquare","mustJump","selSquare","setMustJump","relocationType","targets","_step","_iterator","createForOfIteratorHelper","s","n","done","oneJump","pieceOrKingJump","pieceMove","err","f","kingMove","thisKingJump","pieceOrKingCouldRelocate","setStart","thisPieceJump","thisPieceMove","opponentRowLocation","opponentColLocation","jumpedFigure","bool","setBoard","changePlayer","noKingMoveObstruction","_this$props$state2","gameContainer","JSON","stringify","src_components_Game","src_components_Results","src_components_UserInfo","src_components_AskUserInfo","fromRow","fromCol","Boolean","window","location","hostname","match","initialState","Board","numRowsCols","classCallCheck","fillPieces","makeBoard","Array","fill","emptyBoard","continueToJump","assign","store","createStore","arguments","action","objectSpread2","opponentPlayer","toConsumableArray","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40a385a4.chunk.js","sourcesContent":["\r\n\r\nexport const canAnyPieceJump = (state) => {\r\n  let {board: {board}, activePlayer} = state;\r\n\r\n  for(let row = 0; row < board.length; row++){\r\n    for(let col = 0; col < 8; col++){\r\n      if(board[row][col]){\r\n        if(board[row][col].player === activePlayer && !board[row][col].isKing){\r\n          if(!!canThisPieceJump(row, col, state)){\r\n            console.log('at least one of the pieces can jump');\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const canThisPieceJump = (r, c, state) => {\r\n    let pieceJumps = [];\r\n    \r\n    let {activePlayer, board:{board}} = state;\r\n\r\n    let oppositeFieldSingle = activePlayer === 2 ? -1 : 1;\r\n    let oppositeFieldDouble = activePlayer === 2 ? -2 : 2;  \r\n\r\n    let okRows = false;   \r\n    if((activePlayer === 1 && r <= 5 ) || (activePlayer === 2 && r >= 2)){\r\n      okRows = true;\r\n    }     \r\n\r\n    const iteration = (colFactor) => {\r\n      const square = board[r][c];\r\n      if(square){\r\n        if(!square.isKing && okRows){            \r\n          if(!board[r + oppositeFieldDouble][c + colFactor * 2]){          \r\n            if(board[r+oppositeFieldSingle][c + colFactor]){\r\n                if(board[r+oppositeFieldSingle][c + colFactor].player !== activePlayer){     \r\n                    console.log(`${activePlayer}- player can jump from ${r} - ${c} to ${r + oppositeFieldDouble} - ${c + colFactor * 2}`);               \r\n                    return {rowTarget: r + oppositeFieldDouble, colTarget: c + colFactor * 2 };\r\n                }                  \r\n             }\r\n          }           \r\n        }\r\n      }\r\n    }\r\n    if(c <= 5){\r\n      const jumpLeft = iteration(1);\r\n      if(jumpLeft){\r\n        pieceJumps.push(jumpLeft);\r\n      }      \r\n    }\r\n    if(c >= 2){\r\n      const jumpRight = iteration(-1);\r\n      if(jumpRight){\r\n        pieceJumps.push(jumpRight);\r\n      }      \r\n    }  \r\n  return pieceJumps.length > 0 ? pieceJumps : undefined;\r\n}\r\n\r\nexport const canThisPieceMove = (r, c, state) => {   \r\n  const allPieceMoves = [];\r\n  \r\n  let {board: {board}, activePlayer} = state;\r\n  const square = board[r][c];  \r\n  \r\n  let oppositeField = activePlayer === 2 ? -1 : 1;\r\n  const nextRow = r + oppositeField;  \r\n  \r\n  let maxRowMove = ((activePlayer === 1 && r <= 6) || (activePlayer === 2 && r >= 1)) ? true : false;  \r\n\r\n  const moveLeftOrRight = (colFactor) => {\r\n    if(!board[nextRow][c + colFactor]){\r\n      console.log(`can move to ${nextRow} - ${c + colFactor}`);\r\n      return {rowTarget: nextRow, colTarget: c + colFactor}\r\n    }\r\n  }\r\n  console.log(maxRowMove);\r\n  if(square){\r\n    if(square.player === activePlayer && maxRowMove){\r\n      if(c <= 6){\r\n        let leftMove = moveLeftOrRight(1);\r\n        if(leftMove){\r\n          allPieceMoves.push(leftMove);\r\n        }\r\n      }\r\n      if(c >= 1){\r\n        let rightMove = moveLeftOrRight(-1);\r\n        if(rightMove){\r\n          allPieceMoves.push(rightMove);\r\n        }\r\n      }\r\n     }  \r\n  }\r\n  \r\n   return allPieceMoves.length > 0 ? allPieceMoves : undefined\r\n  }\r\n  \r\n  export const canAnyKingJump = (state) => {\r\n    let {board: {board}, activePlayer} = state;\r\n\r\n    for(let row = 0; row < board.length; row++){\r\n      for(let col = 0; col < 8; col++){\r\n        if(board[row][col]){\r\n          if(board[row][col].player === activePlayer && board[row][col].isKing){\r\n            if(!!canThisKingJump(row, col, state)){\r\n              console.log('at least one of the pieces can jump');\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  export const canThisKingJump = (r, c, state) => {     \r\n    const allKingJumps = [];\r\n    let {board: {board}, activePlayer} = state;   \r\n\r\n      const iteration = (rowFactor, colFactor) => { \r\n        \r\n        let rowLimit = rowFactor > 0 ? 7 : 0;\r\n        let colLimit = colFactor > 0 ? 7 : 0;\r\n        \r\n        for(let row = r, col = c; row !== rowLimit && col !== colLimit; row += rowFactor, col += colFactor){          \r\n          if(board[row][col]){\r\n            if(board[row][col].player !== activePlayer){              \r\n              if(board[row + rowFactor][col + colFactor]){ \r\n                return;                  \r\n              } \r\n              else if(!board[row + rowFactor][col + colFactor]){\r\n                allKingJumps.push({rowTarget: row + rowFactor, colTarget: col + colFactor });  \r\n              }\r\n            }\r\n          }      \r\n         }          \r\n      }\r\n      \r\n      iteration(1, 1);\r\n      iteration(1, -1);\r\n      iteration(-1, 1);\r\n      iteration(-1, -1);     \r\n    \r\n      return allKingJumps.length > 0 ? allKingJumps : undefined;\r\n    }\r\n\r\n    export const canThisKingMove = (r, c, state) => {      \r\n      const {board: {board}} = state;    \r\n  \r\n      let colRight = c === 0 ? -1 : 1;\r\n      let colLeft = c === 7 ? -1 : 1;\r\n  \r\n      let rowBottom = r === 0 ? -1 : 1;\r\n      let rowTop = r === 7 ? -1 : 1;\r\n      \r\n  \r\n      if(c <= 7 && c >= 0 && r <= 7 && r >= 0){\r\n        if(!board[r-rowBottom][c-colRight] || !board[r-rowBottom][c+colLeft] || !board[r+rowTop][c-colRight] || !board[r+rowTop][c+colLeft]){\r\n          return true;\r\n         }    \r\n        }   \r\n      return false;    \r\n    }\r\n     \r\n    ","import React from 'react';\r\nimport './Piece.css'; \r\n\r\n\r\nexport default function Piece({square}) {\r\n    let classes = 'piece ';\r\n    square.player === 1 ? classes += 'white ' : classes += 'black ';\r\n    square.isKing ? classes += 'king ' : classes += '';\r\n    return (\r\n        <div className={classes}>            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './Col.css';\r\nimport Piece from './Piece';\r\n\r\nconst Col = ({square, rowNum, colNum, squareClick, start, selRow, selCol}) => {     \r\n    let col = 'col dib w3 h3 ';\r\n\r\n\r\n    let selectedBorder;\r\n    if(selRow === rowNum && selCol === colNum && start){\r\n        selectedBorder = selRow === rowNum && selCol === colNum && start ? \"ba bw2 b--dark-red \" : \" \";\r\n    }\r\n    \r\n    let darkSquare;\r\n    if((rowNum % 2 === 0 && colNum % 2 === 0) || (rowNum % 2 !==0 && colNum % 2 !==0)) {\r\n        darkSquare = 'dark ';\r\n    }    \r\n    \r\n    return (\r\n        <div className={col + ' ' + selectedBorder + ' ' + darkSquare}  onClick={() => squareClick(rowNum, colNum, square)}>\r\n           { square ? <Piece square={square} /> : null }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Col;","import React from 'react';\r\nimport Col from './Col'\r\n\r\nconst Row = ({row, rowNum, squareClick, start, selRow, selCol}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                row.map((col, i) => {\r\n                    return <Col key={i} square={col} colNum={i} rowNum={rowNum} squareClick={squareClick} start={start}\r\n                                selRow={selRow} selCol={selCol} />\r\n                })\r\n            }          \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import React from 'react';\r\nimport Row from './Row';\r\nimport './Game.css';\r\n\r\nconst Game = ({board, squareClick,  start, selRow, selCol, activePlayer}) => {\r\n        const rows = board.map((row, i) => {\r\n            return <Row key={i} row={row} rowNum={i} squareClick={squareClick} start={start}\r\n                     selRow={selRow} selCol={selCol} activePlayer={activePlayer} />\r\n        });\r\n        return (\r\n            <div>                \r\n                <div className=\"board\">{ rows }</div>     \r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Results.css';\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        state: state\r\n    }\r\n}\r\n\r\nclass Results extends Component {    \r\n    render() {   \r\n        const whoPlays = ' f4 fw9 tracked-mega ttu whoPlays';        \r\n        const columnHead = 'header flex c ba b--black justify-center items-center pv3';\r\n        const columnCell = 'flex c ba b--black justify-center items-center pv3 f5 fw5 avenir';   \r\n        const relocation = 'b f5'\r\n        let playerStyle = 'ttc f4 fw7 '     \r\n\r\n        const boardColumns = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n\r\n        let cols;\r\n        const {read, players, count} = this.props.state;   \r\n        console.log(read);\r\n        console.log(players);\r\n        if(read.length > 0){\r\n            cols = read.map((col, i) => {                \r\n                const from = col.relocatedFrom;                \r\n                const to = col.relocatedTo;\r\n                const captured = col.capturedAt ? col.capturedAt : '';   \r\n                let player = col.player === 1 ? players[0] : players[1];  \r\n\r\n                if(col.player === 1){\r\n                    playerStyle += ' player1';\r\n                }\r\n                else {\r\n                    playerStyle += ' player2';\r\n                }\r\n                \r\n                return  (\r\n                   \r\n                    <div key={i} className='flex flex-row flex-wrap w-100'>\r\n                        <div className={`${columnCell} ${playerStyle}`}>{player}</div>\r\n                        <div className={columnCell}>{col.relocType}d &nbsp; &nbsp;                               \r\n                                <span className={relocation}>{from.r}{boardColumns[from.c]}</span> &nbsp; to &nbsp;<span className={relocation}>{to.r}{boardColumns[to.c]}</span></div>\r\n                        <div className={columnCell}>\r\n                                <span className={relocation}>{captured.r}{boardColumns[captured.c]} </span></div>                                    \r\n                    </div>\r\n                    \r\n                    \r\n                )\r\n            \r\n            })                        \r\n        }     \r\n        return (\r\n            \r\n            <div className='table w-80 tc'>\r\n\r\n                {players && <p className={whoPlays}>{players[0]} playing with {players[1]}</p>}                \r\n                \r\n                {players && <p className='ttu green f4 b'>\r\n                                <span className=''>figures left:</span>  \r\n                                {'  '}\r\n                                <span className='player1'>{players[0]}</span>{'  '} {count[0]}\r\n                                {'   '}\r\n                                <span className='player2'>{players[1]}</span>{'  '} {count[1]}\r\n                            </p>} \r\n\r\n                    <div className='flex flex-row w-100 bg-blue fw6 ttu'>\r\n                        <div className={columnHead}>player</div>\r\n                        <div className={columnHead}>moves</div>\r\n                        <div className={columnHead}>captured at</div>                       \r\n                    </div>\r\n                     <div className=\"cols-wrapper\">\r\n                        {cols}  \r\n                     </div>\r\n                                                \r\n                </div>\r\n            \r\n            \r\n              );\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps)(Results);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { SET_PLAYERS } from '../constants';\r\nimport './AskUserInfo.css';\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setPlayers: (players, stopAnimation) => dispatch({type: SET_PLAYERS, payload: {players, stopAnimation } })\r\n    }\r\n}\r\n\r\nclass AskUserInfo extends Component {\r\n    state = {player1: '', player2: '', warning: false}\r\n    onInputChange = (e) => {\r\n        const player = e.target.name;   \r\n        const value = e.target.value;\r\n        // console.log(player, value);\r\n        this.setState({\r\n            [player]: value, warning: false\r\n        });        \r\n    }\r\n    onPlayersInfoSumbit = (e) => {\r\n        e.preventDefault(); \r\n        const {player1, player2} = this.state;\r\n             \r\n        if(player1.length > 0 && player2.length > 0){\r\n          this.props.setPlayers([this.state.player1, this.state.player2], true);\r\n        }\r\n        else if(player1.length === 0 || player2.length === 0){\r\n            this.setState({warning: true});\r\n        }\r\n    }\r\n\r\n    \r\n    render() { \r\n        let input = ' pv2 ph3 ma2 mb4 w-100 green b ttu tracked';    \r\n        let label = ' ttu tracked light-gray';        \r\n        let warningTachyons = ' ttu bg-pink red f6 shadow-4 w-100 br1 pv2';  \r\n        let visibility = this.state.warning ? ' o-100' : ' o-0';\r\n       \r\n        return (\r\n            <div className='tc'>\r\n                <form onSubmit={this.onPlayersInfoSumbit}>\r\n                    <div className={label}>who plays with light figures?</div>\r\n                    <input className={input} type='text' name='player1' value={this.state.value} onChange={this.onInputChange}  />\r\n                    <div className={label}>who plays with dark figures?</div> \r\n                    <input className={input} type='text' name='player2' value={this.state.value} onChange={this.onInputChange} />\r\n                    <p className={`warning ${warningTachyons} ${visibility}`}>Please fill in bouth fields</p>\r\n                    <button className=\"p3 pv2 ph5 grow pointer bg-blue mt5 ttu\">submit</button>\r\n                </form>\r\n                \r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default connect(null, mapDispatchToProps)(AskUserInfo);\r\n","\r\nexport const SET_MUST_JUMP = 'SET_MUST_JUMP';\r\nexport const PIECE_COULD_RELOCATE = 'PIECE_COULD_RELOCATE';\r\nexport const SET_START = 'SET_START';\r\nexport const SET_BOARD = 'SET_BOARD';\r\nexport const CHANGE_PLAYER = 'CHANGE_PLAYER';\r\nexport const READ = 'READ';\r\nexport const SET_PLAYERS = 'SET_PLAYERS';","import React from 'react';\r\nimport './UserInfo.css';\r\n\r\nconst UserInfo = (props) => {\r\n\r\n    const userInfo = ' userInfo pa6';\r\n    \r\n    return (\r\n        <div className={`${userInfo} bg-green`}>\r\n            {props.children}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInfo;","import React from 'react';\r\n\r\nimport {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {canAnyPieceJump, canThisPieceJump, canThisPieceMove, canAnyKingJump, canThisKingJump, canThisKingMove} from './helpers';\r\nimport {SET_MUST_JUMP, PIECE_COULD_RELOCATE, SET_START, SET_BOARD, CHANGE_PLAYER, READ} from './constants';\r\nimport Game from './components/Game';\r\nimport Results from './components/Results';\r\nimport AskUserInfo from './components/AskUserInfo';\r\nimport UserInfo from './components/UserInfo';\r\nimport './App.css';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({state: state});\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {    \r\n    setMustJump: (bool) => dispatch({type: SET_MUST_JUMP, payload: bool}),\r\n    pieceOrKingCouldRelocate: (relocationType, targets, fromRow, fromCol, player) => dispatch({type: PIECE_COULD_RELOCATE, payload: {relocationType, targets, fromRow, fromCol, player}}),\r\n    setStart: (bool) => dispatch({type: SET_START, payload: bool}),\r\n    setBoard: (board) => dispatch({type: SET_BOARD, payload: board}),\r\n    changePlayer: (player) => dispatch({type: CHANGE_PLAYER, payload: player}),\r\n    read: (relocType, player, relocatedFrom, relocatedTo, capturedAt) => {      \r\n      dispatch({type: READ, payload: {relocType, player, relocatedFrom, relocatedTo, capturedAt}})\r\n    }\r\n  }\r\n} \r\n\r\nclass App extends Component {   \r\n  \r\n  squareClick = (clickedRow, clickedCol, clickedSquare) => {\r\n    console.log(clickedRow, clickedCol, clickedSquare);\r\n    \r\n    let {board: {board}, start, activePlayer, mustJump, selSquare} = this.props.state; \r\n\r\n    const {setMustJump} = this.props;\r\n    \r\n    \r\n      if(canAnyPieceJump(this.props.state) || canAnyKingJump(this.props.state)){\r\n        setMustJump(true);\r\n        mustJump = true;\r\n      }\r\n      else {\r\n        setMustJump(false);\r\n        mustJump = false;\r\n      }\r\n    \r\n    console.log(`after load, after setting to true,  before click mustJump is ${mustJump}`);   \r\n    console.log(!!canAnyPieceJump(this.props.state));\r\n    console.log(canAnyKingJump(this.props.state));\r\n    console.log(`after click mustJump is ${mustJump}`)\r\n    console.log(`start after click is ${start}`);\r\n\r\n\r\n    if(!start){\r\n      if(clickedSquare){\r\n        if(clickedSquare.player === activePlayer && !clickedSquare.isKing){          \r\n            console.log('is piece');              \r\n            if(mustJump){              \r\n              if(!!canThisPieceJump(clickedRow, clickedCol, this.props.state)){\r\n                console.log(`this piece must jump`);\r\n                const thisPieceJump = canThisPieceJump(clickedRow, clickedCol, this.props.state);\r\n                this.props.pieceOrKingCouldRelocate('jump', thisPieceJump, clickedRow, clickedCol, activePlayer);\r\n                this.props.setStart(true);\r\n              }\r\n            } \r\n            else if(!mustJump){\r\n              if(!!canThisPieceMove(clickedRow, clickedCol, this.props.state) && !mustJump){\r\n                const thisPieceMove = canThisPieceMove(clickedRow, clickedCol, this.props.state)\r\n                this.props.pieceOrKingCouldRelocate('move', thisPieceMove, clickedRow, clickedCol, activePlayer);\r\n                this.props.setStart(true);\r\n                console.log(`this piece cannot jump but can move`);\r\n              }\r\n            } \r\n          }\r\n        else if(clickedSquare.player === activePlayer && clickedSquare.isKing){\r\n            if(mustJump){\r\n              console.log('is king');\r\n              const thisKingJump = canThisKingJump(clickedRow, clickedCol, this.props.state);\r\n              if(!!thisKingJump){\r\n                console.log('this king must jump');\r\n                this.props.pieceOrKingCouldRelocate('jump', thisKingJump, clickedRow, clickedCol, activePlayer);\r\n                this.props.setStart(true); \r\n                }                           \r\n              }            \r\n            else if(!mustJump) {              \r\n              if(canThisKingMove(clickedRow, clickedCol, this.props.state)){\r\n                console.log(`this king cannot jump but can move`);\r\n                console.log(`king selected at ${clickedRow} ${clickedCol}`);\r\n                this.props.pieceOrKingCouldRelocate('move', null, clickedRow, clickedCol, activePlayer);\r\n                this.props.setStart(true); \r\n              }\r\n            }\r\n          }\r\n        }\r\n      }   \r\n    \r\n    else if(start) {\r\n      const {selRow, selCol, relocationType} = selSquare;\r\n      if(!clickedSquare){                         \r\n              if(selSquare.player === activePlayer){                                                   \r\n                  const {targets} = selSquare;      \r\n                  if(targets){ \r\n                    \r\n                  for(let oneJump of targets){ \r\n                    console.log(oneJump);                \r\n                    console.log(clickedRow === oneJump.rowTarget)\r\n                    if(clickedRow === oneJump.rowTarget && clickedCol === oneJump.colTarget){       \r\n                      console.log(relocationType);             \r\n                      if(relocationType === 'jump'){                          \r\n                        this.pieceOrKingJump(selSquare, clickedRow, clickedCol, board);\r\n                      }\r\n                      else if(relocationType === 'move'){\r\n                        console.log('piece can move now');                      \r\n                          this.pieceMove(selSquare, clickedRow, clickedCol, board);                     \r\n                      }                      \r\n                    }                  \r\n                   } \r\n                  }\r\n                  else if(!targets){\r\n                    if(board[selRow][selCol].isKing){\r\n                      if(relocationType === 'move'){\r\n                        console.log(`king will move from ${selSquare.selRow} - ${selSquare.selCol} to ${clickedRow} - ${clickedCol}`);\r\n                        this.kingMove(selSquare, clickedRow, clickedCol, board);  \r\n                      }\r\n                    }      \r\n                  }\r\n     \r\n                \r\n              }\r\n            }         \r\n        }   \r\n  }\r\n  pieceOrKingJump = (selSquare, clickedRow, clickedCol, board) => {\r\n    let {selRow, selCol, player} = selSquare;\r\n    let {activePlayer} = this.props.state;\r\n    if(activePlayer !== player){\r\n      return;\r\n    }\r\n    const opponentRowLocation = clickedRow - selRow > 0 ? 1 : -1;\r\n    const opponentColLocation = clickedCol - selCol > 0 ? 1 : -1;\r\n   \r\n\r\n    board[clickedRow][clickedCol] = board[selRow][selCol];\r\n    if(!board[clickedRow][clickedCol].isKing){\r\n      if(activePlayer === 1 && clickedRow === 7) {\r\n        board[clickedRow][clickedCol].isKing = true;\r\n         console.log(`player: ${activePlayer}, clickedRow: ${clickedRow}, clickedCol: ${clickedCol}, wasKing: ${board[clickedRow][clickedCol].isKing}`)\r\n      }\r\n      if(activePlayer === 2 && clickedRow === 0) {\r\n        board[clickedRow][clickedCol].isKing = true;\r\n        console.log(`player: ${activePlayer}, clickedRow: ${clickedRow}, clickedCol: ${clickedCol}, wasKing: ${board[clickedRow][clickedCol].isKing}`)\r\n      }     \r\n    }    \r\n    board[selRow][selCol] = null;\r\n    board[clickedRow - opponentRowLocation][clickedCol - opponentColLocation] = null;\r\n\r\n    console.log(board);   \r\n    \r\n    \r\n   \r\n    console.log(activePlayer);\r\n    const jumpedFigure = board[clickedRow][clickedCol];\r\n\r\n    activePlayer = activePlayer === 1 ? 2 : 1;\r\n\r\n    let bool = false;  \r\n    if(!jumpedFigure.isKing){\r\n      const thisPieceJump = canThisPieceJump(clickedRow, clickedCol, this.props.state);\r\n      if(!!thisPieceJump){\r\n        activePlayer = activePlayer === 1 ? 2 : 1;\r\n        this.props.pieceOrKingCouldRelocate('jump', thisPieceJump, clickedRow, clickedCol, activePlayer);\r\n        bool = true;        \r\n        console.log(activePlayer);\r\n      }\r\n    }\r\n    else if(jumpedFigure.isKing){\r\n      const thisKingJump = canThisKingJump(clickedRow, clickedCol, this.props.state);\r\n      if(!!thisKingJump){\r\n        activePlayer = activePlayer === 1 ? 2 : 1;\r\n        this.props.pieceOrKingCouldRelocate('jump', thisKingJump, clickedRow, clickedCol, activePlayer);\r\n        bool = true;        \r\n      }\r\n     \r\n    } \r\n    console.log(activePlayer);\r\n    console.log(player);\r\n    \r\n\r\n    this.props.setBoard({board});\r\n    this.props.setStart(bool);\r\n    this.props.setMustJump(bool);    \r\n    this.props.changePlayer(activePlayer);\r\n\r\n    const relocatedFrom = {r: selRow, c: selCol};\r\n    const relocatedTo = {r: clickedRow, c: clickedCol};\r\n    const capturedAt = {r: clickedRow - opponentRowLocation, c: clickedCol - opponentColLocation};\r\n\r\n    this.props.read('jump', player, relocatedFrom, relocatedTo, capturedAt);\r\n\r\n  }\r\n\r\n\r\n  pieceMove = (selSquare, clickedRow, clickedCol, board) => {\r\n    let {selRow, selCol, player} = selSquare;\r\n    let {activePlayer} = this.props.state;\r\n    if(activePlayer !== player){\r\n      return;\r\n    }\r\n    \r\n    board[clickedRow][clickedCol] = board[selRow][selCol];\r\n    if(!board[clickedRow][clickedCol].isKing){\r\n      let isKing = activePlayer === 1 && clickedRow === 7 ? true : false;\r\n      board[clickedRow][clickedCol].isKing = isKing;\r\n    }    \r\n    board[selRow][selCol] = null;\r\n   \r\n    console.log(board);\r\n    \r\n    activePlayer = activePlayer === 1 ? 2 : 1;\r\n    \r\n\r\n    this.props.setBoard({board});\r\n    this.props.setStart(false);\r\n    this.props.changePlayer(activePlayer);   \r\n\r\n    const relocatedFrom = {r: selRow, c: selCol};\r\n    const relocatedTo = {r: clickedRow, c: clickedCol};\r\n    \r\n\r\n    this.props.read('move', player, relocatedFrom, relocatedTo, null);\r\n  }\r\n\r\n  kingMove = (selSquare, clickedRow, clickedCol, board) => {\r\n    let {selRow, selCol, player} = selSquare;\r\n    let {activePlayer} = this.props.state;\r\n    if(activePlayer !== player){\r\n      return;\r\n    }\r\n    console.log('king moving');\r\n    let rowFactor = clickedRow - selRow > 0 ? 1 : -1;\r\n    let colFactor = clickedCol - selCol > 0 ? 1 : -1;\r\n    let noKingMoveObstruction = false;\r\n    for(let r = selRow + rowFactor, c = selCol + colFactor; r !== clickedRow && c !== clickedCol; r += rowFactor, c += colFactor){\r\n      if(board[r][c]){\r\n        return;\r\n      } \r\n      else if(!board[r][c]){\r\n        console.log(`empty squares: ${r}-${c}`);     \r\n        console.log(`selRow: ${selRow}, selCol: ${selCol}, clickedRow: ${clickedRow}, clickedCol: ${clickedCol}`);  \r\n        console.log(`iterRow ${r} clickedRow ${clickedRow}`);    \r\n        noKingMoveObstruction = true; \r\n       }\r\n      }      \r\n      if(noKingMoveObstruction){\r\n            \r\n            board[clickedRow][clickedCol] = board[selRow][selCol];\r\n            board[selRow][selCol] = null; \r\n            \r\n            console.log(`player moving: ${player} activePlayer: ${activePlayer}`)\r\n            activePlayer = activePlayer === 1 ? 2 : 1;\r\n            console.log(`player moving: ${player} activePlayer: ${activePlayer}`)\r\n        \r\n\r\n            this.props.setBoard({board});\r\n            this.props.setStart(false);\r\n            this.props.changePlayer(activePlayer);   \r\n        \r\n            const relocatedFrom = {r: selRow, c: selCol};\r\n            const relocatedTo = {r: clickedRow, c: clickedCol};            \r\n            \r\n            this.props.read('move', player, relocatedFrom, relocatedTo, null);\r\n      }  \r\n  }\r\n  \r\n  render(){    \r\n    const {board: {board}, start, activePlayer, selSquare, stopAnimation} = this.props.state;    \r\n    const gameContainer = !stopAnimation ? ' gameContainer' : '';\r\n\r\n    if(selSquare){\r\n      var {selRow, selCol, targets} = selSquare;\r\n    }  \r\n \r\n    console.log(`in render after first load after click on piece that can jump, pieceJumpTargets is ${JSON.stringify(targets)}`);\r\n    console.log(`in render after selecting piece, start is ${start}`);\r\n    return(\r\n      <div className='container'>\r\n        <div className={`${gameContainer} pa5 flex justify-around `}>           \r\n            <Game board={board} squareClick={this.squareClick} start={start}\r\n                  selRow={selRow} selCol={selCol} activePlayer={activePlayer} /> \r\n            <div className=\"w-40\">                \r\n                <Results />\r\n            </div>           \r\n        </div>\r\n        \r\n        { !stopAnimation && (\r\n                              <UserInfo >\r\n                                <AskUserInfo />\r\n                              </UserInfo>\r\n                        )\r\n                  }      \r\n      </div>\r\n      \r\n    )\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","\r\nimport Board from './board';\r\nimport { SET_MUST_JUMP, PIECE_COULD_RELOCATE, SET_START, SET_BOARD, CHANGE_PLAYER, READ, SET_PLAYERS } from './constants';\r\nconst numRowsCols = 8;\r\nconst board = new Board(numRowsCols);\r\nconst initialState = {  board,\r\n                        start: false,\r\n                        mustJump: false,\r\n                        selSquare: null,   \r\n                        players: null,               \r\n                        activePlayer: 1, \r\n                        count: [12, 12],                     \r\n                        read: [],\r\n                        stopAnimation: false        \r\n                    }    \r\n\r\nexport const  boardReducer = (state = initialState, action = {}) => {\r\n    switch(action.type){\r\n        case SET_MUST_JUMP: \r\n            return Object.assign({}, state, {mustJump: action.payload});\r\n        case PIECE_COULD_RELOCATE:\r\n            return Object.assign({}, state, {selSquare: {relocationType: action.payload.relocationType, targets: action.payload.targets, selRow: action.payload.fromRow,\r\n                            selCol: action.payload.fromCol, player: action.payload.player} });\r\n        case SET_START:\r\n                return Object.assign({}, state, {start: action.payload});\r\n        case SET_BOARD:\r\n                return Object.assign({}, state, {board: action.payload});\r\n        case CHANGE_PLAYER:\r\n                return Object.assign({}, state, {activePlayer: action.payload});\r\n        case SET_PLAYERS:\r\n            console.log(action.payload);\r\n                return {...state, players: action.payload.players, stopAnimation: action.payload.stopAnimation};\r\n        case READ: \r\n                let opponentPlayer = action.payload.player === 1 ? 2 : 1;                    \r\n                \r\n                let count = state.count;\r\n                if(action.payload.relocType === 'jump'){\r\n                    if(opponentPlayer === 1){\r\n                        count[0] -= 1;\r\n                    } else {\r\n                        count[1] -= 1;  \r\n                    }  \r\n                }                               \r\n                return {...state, count, read: [...state.read, {\r\n                    relocType: action.payload.relocType,\r\n                    player: action.payload.player,\r\n                    relocatedFrom: action.payload.relocatedFrom,\r\n                    relocatedTo: action.payload.relocatedTo,\r\n                    capturedAt: action.payload.capturedAt\r\n                    },\r\n                ],                \r\n            }\r\n                    \r\n        default: return state;\r\n    }\r\n}\r\n","class Board {\r\n    constructor(numRowsCols){\r\n        this.board = this.fillPieces(this.makeBoard(numRowsCols))\r\n    }\r\n    makeBoard(numRowsCols){\r\n        let board = [];\r\n        for(let r=0; r < numRowsCols; r++){\r\n            board.push(Array(numRowsCols).fill(null));\r\n            }\r\n        console.log(`in makeBoard empty board is ${JSON.stringify(board)}`);\r\n        return board;\r\n    }\r\n        \r\n    \r\n    fillPieces(emptyBoard){\r\n        let count = 0;       \r\n        let square = {isKing: false, continueToJump: false};\r\n        \r\n        for(let r=0; r < emptyBoard.length; r++){\r\n            for(let c=0; c < 8; c+=2){\r\n               \r\n                if(r <= 2){\r\n                    if(r%2 === 0){\r\n                        emptyBoard[r][c] = Object.assign({}, square, {player: 1, count });\r\n                        \r\n                    } else {\r\n                        emptyBoard[r][c+1] = Object.assign({}, square, {player: 1, count});\r\n                    }\r\n                    count++;\r\n                } else if(r >= 5){\r\n                    if(r%2 === 0){\r\n                        emptyBoard[r][c] = Object.assign({}, square, {player: 2, count});\r\n                    } else {\r\n                        emptyBoard[r][c+1] = Object.assign({}, square, {player: 2, count});\r\n                    }\r\n                    count++;\r\n                } \r\n            }\r\n        }\r\n       \r\n        \r\n        return emptyBoard;\r\n    }\r\n}\r\n\r\nexport default Board;","import {createStore} from 'redux';\r\nimport { boardReducer } from './reducers';\r\n\r\n\r\n\r\nconst store = createStore(boardReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App />\r\n                </Provider>\r\n                , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}